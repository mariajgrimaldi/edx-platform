name: CI workflow
on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - name: Cache dependencies
        id: cache-pip-packages
        uses: actions/cache@v2
        with:
          path: /tmp/workspace/venv
          key: v1-${{ hashFiles('.github/workflows/CI.yml') }}-pip-deps-${{ hashFiles('requirements/edx/base.txt') }}-${{ hashFiles('requirements/edx/testing.txt') }}-${{ hashFiles('requirements/edx/django.txt') }}-${{ hashFiles('requirements/edx/base.txt') }}

      - name: Install apt packages
        run: sudo apt-get install python3-dev python3-pip python3-venv python3-wheel -y && sudo apt-get install -y build-essential software-properties-common curl git-core libxml2-dev libxslt1-dev python3-pip libmysqlclient-dev python3-apt python3-dev libxmlsec1-dev libfreetype6-dev swig gcc g++

      - name: Install pip packages
        if: steps.cache-pip-packages.outputs.cache-hit != 'true'
        run: |

              # If venv has not been restored by restore_cache, set it up.
              export PATH=$PATH:$(npm bin)
              [ ! -f /tmp/workspace/venv/bin/activate ] && python3 -m venv /tmp/workspace/venv

              source /tmp/workspace/venv/bin/activate

              # All files listed here must be included in the cache key for pip packages.
              pip install --upgrade pip==20.0.2
              pip install setuptools==44.1.0
              pip3 install wheel
              pip install --exists-action w -r requirements/edx/django.txt
              pip install --exists-action w -r requirements/edx/testing.txt
              pip install --exists-action w -r requirements/edx/paver.txt
              pip install --exists-action w -r requirements/edx/base.txt

      - name: Cache dependencies
        id: cache-npm-packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: v2-${{ hashFiles('.github/workflows/CI.yml') }}-npm-deps-${{ hashFiles('package.json') }}

      - name: Install npm packages
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: |
              node -v
              npm -v
              npm install

  lms_unit_tests:
    needs: build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        shard-value: [1, 2, 3, 4, 5, 6, 7, 8, 9]
    services:
      mongodb:
        image: mongo:3.6
        ports:
          - 27017:27017
    env:
      NO_PREREQ_INSTALL: "true"
      TEST_SUITE: "lms-unit"
      SHARD: ${{ matrix.shard-value }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install MongoDB
        run: |
          echo "deb http://security.ubuntu.com/ubuntu bionic-security main" | sudo tee -a /etc/apt/sources.list.d/bionic.list
          sudo apt update
          apt-cache policy libssl1.0-dev
          sudo apt-get install libssl1.0-dev
          wget -qO - https://www.mongodb.org/static/pgp/server-3.6.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org=3.6.14 mongodb-org-server=3.6.14 mongodb-org-shell=3.6.14 mongodb-org-mongos=3.6.14 mongodb-org-tools=3.6.14 --allow-downgrades

      - name: Cache pip dependencies
        id: cache-pip-packages
        uses: actions/cache@v2
        with:
          path: /tmp/workspace/venv
          key: v1-${{ hashFiles('.github/workflows/CI.yml') }}-pip-deps-${{ hashFiles('requirements/edx/base.txt') }}-${{ hashFiles('requirements/edx/testing.txt') }}-${{ hashFiles('requirements/edx/django.txt') }}-${{ hashFiles('requirements/edx/base.txt') }}

      - name: Cache npm dependencies
        id: cache-npm-packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: v2-${{ hashFiles('.github/workflows/CI.yml') }}-npm-deps-${{ hashFiles('package.json') }}

      - name: Install local pip packages
        run: |
              source /tmp/workspace/venv/bin/activate
              pip install -r requirements/edx/testing.txt

      - name: Run tests
        run: |
              source /tmp/workspace/venv/bin/activate
              export PATH=$PATH:$(npm bin)
              ./scripts/all-tests.sh


  cms_unit_tests:
    needs: build
    runs-on: ubuntu-20.04
    services:
      mongodb:
        image: mongo:3.6
        ports:
          - 27017:27017
    env:
      NO_PREREQ_INSTALL: "true"
      TEST_SUITE: "cms-unit"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install MongoDB
        run: |
          echo "deb http://security.ubuntu.com/ubuntu bionic-security main" | sudo tee -a /etc/apt/sources.list.d/bionic.list
          sudo apt update
          apt-cache policy libssl1.0-dev
          sudo apt-get install libssl1.0-dev
          wget -qO - https://www.mongodb.org/static/pgp/server-3.6.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org=3.6.14 mongodb-org-server=3.6.14 mongodb-org-shell=3.6.14 mongodb-org-mongos=3.6.14 mongodb-org-tools=3.6.14 --allow-downgrades

      - name: Cache pip dependencies
        id: cache-pip-packages
        uses: actions/cache@v2
        with:
          path: /tmp/workspace/venv
          key: v1-${{ hashFiles('.github/workflows/CI.yml') }}-pip-deps-${{ hashFiles('requirements/edx/base.txt') }}-${{ hashFiles('requirements/edx/testing.txt') }}-${{ hashFiles('requirements/edx/django.txt') }}-${{ hashFiles('requirements/edx/base.txt') }}

      - name: Cache dependencies
        id: cache-npm-packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: v2-${{ hashFiles('.github/workflows/CI.yml') }}-npm-deps-${{ hashFiles('package.json') }}

      - name: Install local pip packages
        run: |
              source /tmp/workspace/venv/bin/activate
              pip install -r requirements/edx/testing.txt

      - name: Run tests
        run: |
              source /tmp/workspace/venv/bin/activate
              export PATH=$PATH:$(npm bin)
              ./scripts/all-tests.sh

  lib_unit_tests:
    needs: build
    runs-on: ubuntu-20.04
    services:
      mongodb:
        image: mongo:3.6
        ports:
          - 27017:27017
    env:
      NO_PREREQ_INSTALL: "true"
      TEST_SUITE: "commonlib-unit"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install MongoDB
        run: |
          echo "deb http://security.ubuntu.com/ubuntu bionic-security main" | sudo tee -a /etc/apt/sources.list.d/bionic.list
          sudo apt update
          apt-cache policy libssl1.0-dev
          sudo apt-get install libssl1.0-dev
          wget -qO - https://www.mongodb.org/static/pgp/server-3.6.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org=3.6.14 mongodb-org-server=3.6.14 mongodb-org-shell=3.6.14 mongodb-org-mongos=3.6.14 mongodb-org-tools=3.6.14 --allow-downgrades

      - name: Cache pip dependencies
        id: cache-pip-packages
        uses: actions/cache@v2
        with:
          path: /tmp/workspace/venv
          key: v1-${{ hashFiles('.github/workflows/CI.yml') }}-pip-deps-${{ hashFiles('requirements/edx/base.txt') }}-${{ hashFiles('requirements/edx/testing.txt') }}-${{ hashFiles('requirements/edx/django.txt') }}-${{ hashFiles('requirements/edx/base.txt') }}

      - name: Cache npm dependencies
        id: cache-npm-packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: v2-${{ hashFiles('.github/workflows/CI.yml') }}-npm-deps-${{ hashFiles('package.json') }}

      - name: Install local pip packages
        run: |
              source /tmp/workspace/venv/bin/activate
              pip install -r requirements/edx/testing.txt

      - name: Run tests
        run: |
              source /tmp/workspace/venv/bin/activate
              ./scripts/all-tests.sh

  javascript_tests:
    needs: build
    runs-on: ubuntu-20.04
    env:
      NO_PREREQ_INSTALL: "true"
      TEST_SUITE: "js-unit"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache pip dependencies
        id: cache-pip-packages
        uses: actions/cache@v2
        with:
          path: /tmp/workspace/venv
          key: v1-${{ hashFiles('.github/workflows/CI.yml') }}-pip-deps-${{ hashFiles('requirements/edx/base.txt') }}-${{ hashFiles('requirements/edx/testing.txt') }}-${{ hashFiles('requirements/edx/django.txt') }}-${{ hashFiles('requirements/edx/base.txt') }}

      - name: Cache npm dependencies
        id: cache-npm-packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: v2-${{ hashFiles('.github/workflows/CI.yml') }}-npm-deps-${{ hashFiles('package.json') }}

      - name: Install local pip packages
        run: |
              source /tmp/workspace/venv/bin/activate
              pip install -r requirements/edx/testing.txt

      - name: Run tests
        run: |
              source /tmp/workspace/venv/bin/activate
              export PATH=$PATH:node_modules/.bin
              ./scripts/all-tests.sh

  quality_tests:
    needs: build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        shard-value: [1, 2, 3, 4]
    env:
      NO_PREREQ_INSTALL: "true"
      TEST_SUITE: "quality"
      SHARD: ${{ matrix.shard-value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache pip dependencies
        id: cache-pip-packages
        uses: actions/cache@v2
        with:
          path: /tmp/workspace/venv
          key: v1-${{ hashFiles('.github/workflows/CI.yml') }}-pip-deps-${{ hashFiles('requirements/edx/base.txt') }}-${{ hashFiles('requirements/edx/testing.txt') }}-${{ hashFiles('requirements/edx/django.txt') }}-${{ hashFiles('requirements/edx/base.txt') }}

      - name: Cache npm dependencies
        id: cache-npm-packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: v2-${{ hashFiles('.github/workflows/CI.yml') }}-npm-deps-${{ hashFiles('package.json') }}

      - name: Install local pip packages
        run: |
              source /tmp/workspace/venv/bin/activate
              pip install -r requirements/edx/testing.txt

      - name: Run tests
        run: |
              source /tmp/workspace/venv/bin/activate
              export PATH=$PATH:$(npm bin)
              ./scripts/all-tests.sh
